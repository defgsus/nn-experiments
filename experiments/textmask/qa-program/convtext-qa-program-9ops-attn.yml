experiment_name: textmask/convtext-QAprog-9_${matrix_slug}

matrix:
  bs: [64]
  opt: ["AdamW"]
  lr: [.0005]
  nitem:
    - 26
  len:
    - 5
  nops:
    - [2, 9]
  vnops:
    - 9
  l:
    #- 5
    - 9
  ch:
    - 64
#    - 128
  ks:
    - 9
    #- 11
    #- 13
  dil:
    - [1, 2, 3, 2, 3, 4, 3, 4, 1]
    #- [2, 3, 4, 5, 2, 3, 4, 5, 1]  # not good
  $filter: (isinstance(${dil}, int) or len(${dil}) == ${l}) and (isinstance(${attn}, int) or len(${attn}) == ${l})
  attn:
    - [0, 0, 4, 4, 0]  # good 4-chan
    #- [0, 0, 0, 0, 0, 0, 4, 4, 0]  # not good
    - [0, 0, 0, 0, 4, 0, 0, 0, 4]  # not good either
  act:
    - "gelu"


trainer: experiments.textmask.texttrainer.TextMaskTrainer
mask_is_arg: 1

train_set: |
  train_set, validation_set = TextQAProgramIterableDataset.create_train_and_validation_set(
    train_count=100_000,
    validation_count=10_000,
    validation_seed=23,
    with_masked=True,
    num_items=${nitem},
    input_length=${len},
    num_operations=${nops},
    validation_num_operations=${vnops},
    operators={">": 1},# "+": 1., "-": 2/3},
  )
  train_set

validation_set: |
  validation_set

batch_size: ${bs}
learnrate: ${lr}
optimizer: ${opt}
scheduler: CosineAnnealingWarmupLR
loss_function: l1
max_inputs: 4_000_000
num_epochs_between_validations: 1
#num_inputs_between_validations: 50_000
freeze_validation_set: True


model: |
  from experiments.textmask.textmodel import ConvTextModel
  # from experiments.textmask.textmodel2 import ConvTextModel2
  
  ConvTextModel(
      vocab_size=256,
      num_layers=${l},
      num_channels=${ch},
      kernel_size=${ks},
      dilation=${dil},
      activation="${act}",
      num_attention_heads=${attn},
  )
