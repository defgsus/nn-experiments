experiment_name: img2img/shinytubes-spikes7-vit-${matrix_slug}

matrix:
  init:
    - .01
  bs: [64]
  opt: ["AdamW"]
  lr: [0.0001]
  patch:
    - 4
  l:
    - 6
  dim:
    - 256
  mlpdim:
    - 256
  head:
    - 4

trainer: experiments.img2img.trainer.TrainImg2Img
# histogram_loss_weight: 100.
# image_loss_margin: 2
resize_log_images: 3.

train_set: |
  ImageSourceTargetCropDataset("datasets/shiny-tubes3/train", SHAPE[-2:], target_first=True, num_crops=5000, random=True)

validation_set: |
  ImageSourceTargetCropDataset("datasets/shiny-tubes3/validation", SHAPE[-2:], target_first=True, num_crops=2000, random=False)

batch_size: ${bs}
learnrate: ${lr}
optimizer: ${opt}
scheduler: CosineAnnealingWarmupLR
loss_function: l1
max_inputs: 1_000_000
num_inputs_between_validations: 100_000
# freeze_validation_set: True


globals:
  SHAPE: (3, 32, 32)

model: |
    from experiments.diffusion.vit import ViT
    
    class Module(nn.Module):
        def __init__(self):
            super().__init__()
            self.module = ViT(
                image_channels=SHAPE[0],
                image_size=SHAPE[1],
                patch_size=${patch},
                num_layers=${l},
                num_heads=${head},
                hidden_dim=${dim},
                mlp_dim=${mlpdim},
            )
    
        def forward(self, input):
            return self.module(input) 
    
    Module()
